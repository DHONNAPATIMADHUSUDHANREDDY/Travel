{"ast":null,"code":"var _jsxFileName = \"/Users/madhusudhanreddydhonnapati/Documents/helpdesk/client/src/Traveldetails.jsx\",\n  _s = $RefreshSig$();\nimport \"./Traveldetails.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Traveldetails() {\n  _s();\n  //const [userCity, setUserCity] = useState(\"hyderabad\");\n\n  const [userCity, setUserCity] = useState(\"\");\n\n  //temperature\n  const [weatherData, setWeatherData] = useState({\n    temperature: 0,\n    weatherConditions: \"\",\n    climateDescription: \"\",\n    seasonalWeather: \"\"\n  });\n  useEffect(() => {\n    const fetchPlaceName = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/getplace\");\n        setUserCity(response.data.place_name);\n      } catch (error) {\n        console.error(\"Error fetching place name:\", error);\n      }\n    };\n    fetchPlaceName();\n  }, []);\n  const [touristPlaces, setTouristPlaces] = useState([]);\n  const [accommodations, setAccommodations] = useState([]);\n  const [restaurants, setRestaurants] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const cityCoords = await getCityCoordinates(userCity);\n        const apiKey = '5ae2e3f221c38a28845f05b6d63373a3a7200d5edd9e4bd581e3b7c3';\n        const radius = 10000;\n\n        // Fetch places to visit\n        const placesUrl = `https://api.opentripmap.com/0.1/en/places/radius?radius=${radius}&lon=${cityCoords.lon}&lat=${cityCoords.lat}&apikey=${apiKey}`;\n        const placesResponse = await axios.get(placesUrl);\n        const places = placesResponse.data.features.map(place => ({\n          name: place.properties.name,\n          rating: place.properties.rate || 0\n        }));\n        const sortedPlaces = places.sort((a, b) => b.rating - a.rating).slice(0, 20);\n        setTouristPlaces(sortedPlaces);\n\n        // Fetch accommodations\n        const accommodationsUrl = `https://api.opentripmap.com/0.1/en/places/radius?radius=${radius}&lon=${cityCoords.lon}&lat=${cityCoords.lat}&kinds=accomodations&apikey=${apiKey}`;\n        const accommodationsResponse = await axios.get(accommodationsUrl);\n        const accommodations = accommodationsResponse.data.features.map(accommodation => ({\n          name: accommodation.properties.name,\n          rating: accommodation.properties.rate || 0\n        }));\n        const sortedAccommodations = accommodations.sort((a, b) => b.rating - a.rating).slice(0, 30);\n        setAccommodations(sortedAccommodations);\n\n        // Fetch restaurants\n        const restaurantsUrl = `https://api.opentripmap.com/0.1/en/places/radius?radius=${radius}&lon=${cityCoords.lon}&lat=${cityCoords.lat}&kinds=restaurants&apikey=${apiKey}`;\n        const restaurantsResponse = await axios.get(restaurantsUrl);\n        const restaurants = restaurantsResponse.data.features.map(restaurant => ({\n          name: restaurant.properties.name,\n          rating: restaurant.properties.rate || 0\n          // Extract other relevant information as needed\n        }));\n        const sortedRestaurants = restaurants.sort((a, b) => b.rating - a.rating).slice(0, 30);\n        setRestaurants(sortedRestaurants);\n      } catch (error) {\n        console.error('Error fetching data from OpenTripMap API:', error);\n      }\n    };\n    fetchData();\n  }, [userCity]);\n\n  //temperature\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const cityCoords = await getCityCoordinates(userCity);\n        const apiKey = '3465e1a76a4bbf0671bc4cb4c2424db1';\n        const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${cityCoords.lat}&lon=${cityCoords.lon}&appid=${apiKey}&units=metric`;\n        const weatherResponse = await axios.get(weatherUrl);\n        const weatherDetails = weatherResponse.data;\n        setWeatherData({\n          temperature: weatherDetails.main.temp,\n          weatherConditions: weatherDetails.weather[0].main,\n          humidity: weatherDetails.list[0].main.humidity,\n          // You can fetch this data from another source or API\n          seasonalWeather: \"\" // Similarly, fetch seasonal weather information\n        });\n\n        // Fetch other data (places to visit, accommodations, restaurants) as before...\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n    fetchData();\n  }, [userCity]);\n\n  //cordinates\n\n  const getCityCoordinates = async city => {\n    try {\n      const apiKey = '5ae2e3f221c38a28845f05b6d63373a3a7200d5edd9e4bd581e3b7c3';\n      const citySearchUrl = `https://api.opentripmap.com/0.1/en/places/geoname?name=${city}&apikey=${apiKey}`;\n      const response = await axios.get(citySearchUrl);\n      const cityData = response.data;\n      if (cityData.status === \"OK\") {\n        return {\n          lon: cityData.lon,\n          lat: cityData.lat\n        };\n      } else {\n        throw new Error(`Could not find coordinates for ${city}`);\n      }\n    } catch (error) {\n      console.error('Error fetching city coordinates:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"travelout\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row vits\",\n        style: {\n          marginTop: \"10%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-6 col-sm-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header card text-white bg-dark mb-1\",\n            style: {\n              maxWidth: \"20rem\",\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Places to Visit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 120\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card text-white bg-dark mb-3\",\n            style: {\n              maxWidth: \"20rem\",\n              maxHeight: \"15rem\",\n              overflow: \"scroll\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: touristPlaces.map((place, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: place.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-6 col-sm-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header card text-white bg-dark mb-1\",\n            style: {\n              maxWidth: \"20rem\",\n              textAlign: \"center\"\n            },\n            children: \"Accommodation Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card text-white bg-dark mb-3\",\n            style: {\n              maxWidth: \"20rem\",\n              maxHeight: \"15rem\",\n              overflow: \"scroll\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: accommodations.map((accommodation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: accommodation.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-6 col-sm-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header card text-white bg-dark mb-1\",\n            style: {\n              maxWidth: \"20rem\",\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Restaurants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 120\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card text-white bg-dark mb-3\",\n            style: {\n              maxWidth: \"20rem\",\n              maxHeight: \"15rem\",\n              overflow: \"scroll\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: restaurants.map((restaurant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: restaurant.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-6 col-sm-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header card text-white bg-dark mb-1\",\n            style: {\n              maxWidth: \"20rem\",\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Weather Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 120\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card text-white bg-dark mb-3\",\n            style: {\n              maxWidth: \"20rem\",\n              maxHeight: \"15rem\",\n              overflow: \"scroll\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Current Temperature: \", weatherData.temperature, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Weather Conditions: \", weatherData.weatherConditions]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Humidity: \", weatherData.humidity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Seasonal Weather: \", weatherData.seasonalWeather]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Traveldetails, \"C2h3dcMnZ6buyWWDi+iGL4dgpjU=\");\n_c = Traveldetails;\nexport default Traveldetails;\n\n/*\nimport \"./Traveldetails.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Traveldetails() {\n  const [userCity, setUserCity] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({\n    temperature: 0,\n    weatherConditions: \"\",\n    climateDescription: \"\",\n    seasonalWeather: \"\",\n  });\n\n  const [touristPlaces, setTouristPlaces] = useState([]);\n  const [accommodations, setAccommodations] = useState([]);\n  const [restaurants, setRestaurants] = useState([]);\n\n  useEffect(() => {\n    const fetchPlaceName = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/getplace\");\n        setUserCity(response.data.place_name);\n      } catch (error) {\n        console.error(\"Error fetching place name:\", error);\n      }\n    };\n\n    fetchPlaceName();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const cityCoords = await getCityCoordinates(userCity);\n        const apiKey = '3465e1a76a4bbf0671bc4cb4c2424db1';\n        const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${cityCoords.lat}&lon=${cityCoords.lon}&appid=${apiKey}&units=metric`;\n        const weatherResponse = await axios.get(weatherUrl);\n        const weatherDetails = weatherResponse.data;\n\n        setWeatherData({\n          temperature: weatherDetails.main.temp,\n          weatherConditions: weatherDetails.weather[0].main,\n          humidity: weatherDetails.list[0].main.humidity, // You can fetch this data from another source or API\n          seasonalWeather: \"\", // Similarly, fetch seasonal weather information\n        });\n\n        // Fetch other data (places to visit, accommodations, restaurants) as before...\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n\n    fetchData();\n  }, [userCity]);\n\n  const getCityCoordinates = async (city) => {\n    try {\n      const apiKey = '5ae2e3f221c38a28845f05b6d63373a3a7200d5edd9e4bd581e3b7c3';\n      const citySearchUrl = `https://api.opentripmap.com/0.1/en/places/geoname?name=${city}&apikey=${apiKey}`;\n      const response = await axios.get(citySearchUrl);\n      const cityData = response.data;\n\n      if (cityData.status === \"OK\") {\n        return {\n          lon: cityData.lon,\n          lat: cityData.lat,\n        };\n      } else {\n        throw new Error(`Could not find coordinates for ${city}`);\n      }\n    } catch (error) {\n      console.error('Error fetching city coordinates:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"travelout\">\n        <div className=\"row vits\"style={{marginTop:\"10%\"}}>\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\",textAlign:\"center\" }}><h6 >Places to Visit</h6></div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n                \n                {touristPlaces.map((place, index) => (\n                  <div key={index}>\n                    {place.name}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\" ,textAlign:\"center\"}}>Accommodation Details</div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n                \n                {accommodations.map((accommodation, index) => (\n                  <div key={index}>\n                    {accommodation.name}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\" ,textAlign:\"center\"}}><h6>Restaurants</h6></div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n             \n                {restaurants.map((restaurant, index) => (\n                  <div key={index}>\n                    {restaurant.name}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\",textAlign:\"center\" }}><h6 >Weather Information</h6></div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n                <p>Current Temperature: {weatherData.temperature}°C</p>\n                <p>Weather Conditions: {weatherData.weatherConditions}</p>\n                <p>Humidity: {weatherData.humidity}</p>\n                <p>Seasonal Weather: {weatherData.seasonalWeather}</p>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Traveldetails;\n*/\nvar _c;\n$RefreshReg$(_c, \"Traveldetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Traveldetails","_s","userCity","setUserCity","weatherData","setWeatherData","temperature","weatherConditions","climateDescription","seasonalWeather","fetchPlaceName","response","get","data","place_name","error","console","touristPlaces","setTouristPlaces","accommodations","setAccommodations","restaurants","setRestaurants","fetchData","cityCoords","getCityCoordinates","apiKey","radius","placesUrl","lon","lat","placesResponse","places","features","map","place","name","properties","rating","rate","sortedPlaces","sort","a","b","slice","accommodationsUrl","accommodationsResponse","accommodation","sortedAccommodations","restaurantsUrl","restaurantsResponse","restaurant","sortedRestaurants","weatherUrl","weatherResponse","weatherDetails","main","temp","weather","humidity","list","city","citySearchUrl","cityData","status","Error","children","className","style","marginTop","maxWidth","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflow","index","_c","$RefreshReg$"],"sources":["/Users/madhusudhanreddydhonnapati/Documents/helpdesk/client/src/Traveldetails.jsx"],"sourcesContent":["\nimport \"./Traveldetails.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Traveldetails() {\n\n\n  //const [userCity, setUserCity] = useState(\"hyderabad\");\n\n  const [userCity, setUserCity] = useState(\"\");\n\n\n  //temperature\n  const [weatherData, setWeatherData] = useState({\n    temperature: 0,\n    weatherConditions: \"\",\n    climateDescription: \"\",\n    seasonalWeather: \"\",\n  });\n  \n\n  useEffect(() => {\n    const fetchPlaceName = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/getplace\");\n        setUserCity(response.data.place_name);\n      } catch (error) {\n        console.error(\"Error fetching place name:\", error);\n      }\n    };\n\n    fetchPlaceName();\n  }, []);\n\n\n\n\n  const [touristPlaces, setTouristPlaces] = useState([]);\n  const [accommodations, setAccommodations] = useState([]);\n  const [restaurants, setRestaurants] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const cityCoords = await getCityCoordinates(userCity);\n        const apiKey = '5ae2e3f221c38a28845f05b6d63373a3a7200d5edd9e4bd581e3b7c3';\n        const radius = 10000;\n\n        // Fetch places to visit\n        const placesUrl = `https://api.opentripmap.com/0.1/en/places/radius?radius=${radius}&lon=${cityCoords.lon}&lat=${cityCoords.lat}&apikey=${apiKey}`;\n        const placesResponse = await axios.get(placesUrl);\n        const places = placesResponse.data.features.map(place => ({\n          name: place.properties.name,\n          rating: place.properties.rate || 0,\n        }));\n        const sortedPlaces = places.sort((a, b) => b.rating - a.rating).slice(0, 20);\n        setTouristPlaces(sortedPlaces);\n\n        // Fetch accommodations\n        const accommodationsUrl = `https://api.opentripmap.com/0.1/en/places/radius?radius=${radius}&lon=${cityCoords.lon}&lat=${cityCoords.lat}&kinds=accomodations&apikey=${apiKey}`;\n        const accommodationsResponse = await axios.get(accommodationsUrl);\n        const accommodations = accommodationsResponse.data.features.map(accommodation => ({\n          name: accommodation.properties.name,\n          rating: accommodation.properties.rate || 0,\n        }));\n        const sortedAccommodations = accommodations.sort((a, b) => b.rating - a.rating).slice(0, 30);\n        setAccommodations(sortedAccommodations);\n\n        // Fetch restaurants\n        const restaurantsUrl = `https://api.opentripmap.com/0.1/en/places/radius?radius=${radius}&lon=${cityCoords.lon}&lat=${cityCoords.lat}&kinds=restaurants&apikey=${apiKey}`;\n        const restaurantsResponse = await axios.get(restaurantsUrl);\n        const restaurants = restaurantsResponse.data.features.map(restaurant => ({\n          name: restaurant.properties.name,\n          rating: restaurant.properties.rate || 0,\n          // Extract other relevant information as needed\n        }));\n        const sortedRestaurants = restaurants.sort((a, b) => b.rating - a.rating).slice(0, 30);\n        setRestaurants(sortedRestaurants);\n      } catch (error) {\n        console.error('Error fetching data from OpenTripMap API:', error);\n      }\n    };\n\n    fetchData();\n  }, [userCity]);\n\n\n//temperature\n\n\nuseEffect(() => {\n  const fetchData = async () => {\n    try {\n      const cityCoords = await getCityCoordinates(userCity);\n      const apiKey = '3465e1a76a4bbf0671bc4cb4c2424db1';\n      const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${cityCoords.lat}&lon=${cityCoords.lon}&appid=${apiKey}&units=metric`;\n      const weatherResponse = await axios.get(weatherUrl);\n      const weatherDetails = weatherResponse.data;\n\n      setWeatherData({\n        temperature: weatherDetails.main.temp,\n        weatherConditions: weatherDetails.weather[0].main,\n        humidity: weatherDetails.list[0].main.humidity, // You can fetch this data from another source or API\n        seasonalWeather: \"\", // Similarly, fetch seasonal weather information\n      });\n\n      // Fetch other data (places to visit, accommodations, restaurants) as before...\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n\n  fetchData();\n}, [userCity]);\n\n\n\n\n\n\n  //cordinates\n\n  const getCityCoordinates = async (city) => {\n    try {\n      const apiKey = '5ae2e3f221c38a28845f05b6d63373a3a7200d5edd9e4bd581e3b7c3';\n      const citySearchUrl = `https://api.opentripmap.com/0.1/en/places/geoname?name=${city}&apikey=${apiKey}`;\n      const response = await axios.get(citySearchUrl);\n      const cityData = response.data;\n\n      if (cityData.status === \"OK\") {\n        return {\n          lon: cityData.lon,\n          lat: cityData.lat,\n        };\n      } else {\n        throw new Error(`Could not find coordinates for ${city}`);\n      }\n    } catch (error) {\n      console.error('Error fetching city coordinates:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"travelout\">\n        <div className=\"row vits\"style={{marginTop:\"10%\"}}>\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\",textAlign:\"center\" }}><h6 >Places to Visit</h6></div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n                {touristPlaces.map((place, index) => (\n                  <div key={index}>\n                    {place.name}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\" ,textAlign:\"center\"}}>Accommodation Details</div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n                {accommodations.map((accommodation, index) => (\n                  <div key={index}>\n                    {accommodation.name}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\" ,textAlign:\"center\"}}><h6>Restaurants</h6></div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n                {restaurants.map((restaurant, index) => (\n                  <div key={index}>\n                    {restaurant.name}\n\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n\n\n          {/*temperature */}\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\",textAlign:\"center\" }}><h6 >Weather Information</h6></div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n                <p>Current Temperature: {weatherData.temperature}°C</p>\n                <p>Weather Conditions: {weatherData.weatherConditions}</p>\n                <p>Humidity: {weatherData.humidity}</p>\n                <p>Seasonal Weather: {weatherData.seasonalWeather}</p>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Traveldetails;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nimport \"./Traveldetails.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Traveldetails() {\n  const [userCity, setUserCity] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({\n    temperature: 0,\n    weatherConditions: \"\",\n    climateDescription: \"\",\n    seasonalWeather: \"\",\n  });\n\n  const [touristPlaces, setTouristPlaces] = useState([]);\n  const [accommodations, setAccommodations] = useState([]);\n  const [restaurants, setRestaurants] = useState([]);\n\n  useEffect(() => {\n    const fetchPlaceName = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/getplace\");\n        setUserCity(response.data.place_name);\n      } catch (error) {\n        console.error(\"Error fetching place name:\", error);\n      }\n    };\n\n    fetchPlaceName();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const cityCoords = await getCityCoordinates(userCity);\n        const apiKey = '3465e1a76a4bbf0671bc4cb4c2424db1';\n        const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${cityCoords.lat}&lon=${cityCoords.lon}&appid=${apiKey}&units=metric`;\n        const weatherResponse = await axios.get(weatherUrl);\n        const weatherDetails = weatherResponse.data;\n\n        setWeatherData({\n          temperature: weatherDetails.main.temp,\n          weatherConditions: weatherDetails.weather[0].main,\n          humidity: weatherDetails.list[0].main.humidity, // You can fetch this data from another source or API\n          seasonalWeather: \"\", // Similarly, fetch seasonal weather information\n        });\n\n        // Fetch other data (places to visit, accommodations, restaurants) as before...\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n\n    fetchData();\n  }, [userCity]);\n\n  const getCityCoordinates = async (city) => {\n    try {\n      const apiKey = '5ae2e3f221c38a28845f05b6d63373a3a7200d5edd9e4bd581e3b7c3';\n      const citySearchUrl = `https://api.opentripmap.com/0.1/en/places/geoname?name=${city}&apikey=${apiKey}`;\n      const response = await axios.get(citySearchUrl);\n      const cityData = response.data;\n\n      if (cityData.status === \"OK\") {\n        return {\n          lon: cityData.lon,\n          lat: cityData.lat,\n        };\n      } else {\n        throw new Error(`Could not find coordinates for ${city}`);\n      }\n    } catch (error) {\n      console.error('Error fetching city coordinates:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"travelout\">\n        <div className=\"row vits\"style={{marginTop:\"10%\"}}>\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\",textAlign:\"center\" }}><h6 >Places to Visit</h6></div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n                \n                {touristPlaces.map((place, index) => (\n                  <div key={index}>\n                    {place.name}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\" ,textAlign:\"center\"}}>Accommodation Details</div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n                \n                {accommodations.map((accommodation, index) => (\n                  <div key={index}>\n                    {accommodation.name}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\" ,textAlign:\"center\"}}><h6>Restaurants</h6></div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n             \n                {restaurants.map((restaurant, index) => (\n                  <div key={index}>\n                    {restaurant.name}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\n            <div className=\"card-header card text-white bg-dark mb-1\" style={{ maxWidth: \"20rem\",textAlign:\"center\" }}><h6 >Weather Information</h6></div>\n            <div className=\"card text-white bg-dark mb-3\" style={{ maxWidth: \"20rem\", maxHeight: \"15rem\", overflow: \"scroll\" }}>\n\n              <div className=\"card-body\">\n                <p>Current Temperature: {weatherData.temperature}°C</p>\n                <p>Weather Conditions: {weatherData.weatherConditions}</p>\n                <p>Humidity: {weatherData.humidity}</p>\n                <p>Seasonal Weather: {weatherData.seasonalWeather}</p>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Traveldetails;\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}